#!/bin/bash

# -------------------------------------------------------------- description ---

# a script to find and clean git repositories by removing untracked files,
# pruning stale branches, and running garbage collection

# ------------------------------------------------------------ configuration ---

REPO_BASE="$HOME/repos"

# ---------------------------------------------------------------------- fns ---

log() {
  echo -e "\033[1;32m[I] $1\033[0m"
}

log_error() {
  echo -e "\033[1;31m[E] $1\033[0m" >&2
}

clean_git_repo() {
  local repo_path="$1"
  log "cleaning repository: $repo_path"

  pushd "$repo_path"

  # fetch and prune stale branches
  git fetch --prune || {
    log_error "failed to fetch and prune in $repo_path"
    return
  }

  # remove untracked files and directories
  git clean -fdx || {
    log_error "failed to clean untracked files in $repo_path"
    return
  }

  # garbage collect and optimize
  git gc --aggressive --prune=now || {
    log_error "failed to run git gc in $repo_path"
    return
  }

  popd

  log "completed cleaning: $repo_path"
}

# ------------------------------------------------------------------- script ---

# iterate over repositories 2 (+1 for .git directory) levels deep
find "$REPO_BASE" -mindepth 3 -maxdepth 3 -type d -name ".git" | while read -r git_dir; do
  repo_dir=$(dirname "$git_dir")
  clean_git_repo "$repo_dir"
done

log "all repositories cleaned!"
